// <auto-generated />

using System;
using AutomoderatorGameBot.BackEnd.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace AutomoderatorGameBot.BackEnd.Migrations
{
    [DbContext(typeof(GameDbContext))]
    internal class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.BotConfig", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<int>("ShutUpDuration")
                    .HasColumnType("int");

                b.Property<bool>("ShutUpEnabled")
                    .HasColumnType("bit");

                b.Property<DateTime>("ShutUpLastUsed")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("BotConfigs");
            });

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.CoolDown", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<DateTime>("MineLastUsed")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("CoolDowns");
            });

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.GameUser", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<int?>("CoolDownId")
                    .HasColumnType("int");

                b.Property<DateTime>("DateTimeAdded")
                    .HasColumnType("datetime2");

                b.Property<decimal>("DiscordUserId")
                    .HasColumnType("decimal(20,0)");

                b.Property<bool>("IsDrafted")
                    .HasColumnType("bit");

                b.Property<long>("ShitCoins")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("CoolDownId");

                b.ToTable("GameUsers");
            });

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.Item", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<int?>("GameUserId")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.Property<long>("Price")
                    .HasColumnType("bigint");

                b.Property<long>("SellPrice")
                    .HasColumnType("bigint");

                b.Property<int?>("ShopId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("GameUserId");

                b.HasIndex("ShopId");

                b.ToTable("Items");
            });

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.MiniGameChoice", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<string>("ChoiceName")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("FailResultChance")
                    .HasColumnType("int");

                b.Property<string>("FailResultText")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("MiniGameName")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("RegularResultChance")
                    .HasColumnType("int");

                b.Property<long>("RegularResultMoney")
                    .HasColumnType("bigint");

                b.Property<string>("RegularResultText")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("SpecialResultChance")
                    .HasColumnType("int");

                b.Property<long>("SpecialResultMoney")
                    .HasColumnType("bigint");

                b.Property<string>("SpecialResultText")
                    .HasColumnType("nvarchar(max)");

                b.Property<int?>("SpecialRewardId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("SpecialRewardId");

                b.ToTable("MiniGameChoices");
            });

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.Shop", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn();

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Shops");
            });

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.GameUser", b =>
            {
                b.HasOne("AutomoderatorGameBot.BackEnd.Models.CoolDown", "CoolDown")
                    .WithMany()
                    .HasForeignKey("CoolDownId");

                b.Navigation("CoolDown");
            });

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.Item", b =>
            {
                b.HasOne("AutomoderatorGameBot.BackEnd.Models.GameUser", "GameUser")
                    .WithMany("Items")
                    .HasForeignKey("GameUserId");

                b.HasOne("AutomoderatorGameBot.BackEnd.Models.Shop", "Shop")
                    .WithMany("Items")
                    .HasForeignKey("ShopId");

                b.Navigation("GameUser");

                b.Navigation("Shop");
            });

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.MiniGameChoice", b =>
            {
                b.HasOne("AutomoderatorGameBot.BackEnd.Models.Item", "SpecialReward")
                    .WithMany()
                    .HasForeignKey("SpecialRewardId");

                b.Navigation("SpecialReward");
            });

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.GameUser", b => { b.Navigation("Items"); });

            modelBuilder.Entity("AutomoderatorGameBot.BackEnd.Models.Shop", b => { b.Navigation("Items"); });
#pragma warning restore 612, 618
        }
    }
}